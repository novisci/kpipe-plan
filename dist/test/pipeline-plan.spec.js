"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
// import { renderOpList } from '../src/render'
test('compile plan with pipeline', async () => {
    // const ops = JSON.parse(require('fs').readFileSync('./test/pipeline-plan.json'))
    // console.error('IN', JSON.stringify(ops))
    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */
    /* eslint-disable-next-line no-template-curly-in-string */
    const [[...cops]] = await __1.compileOps(__1.parseOps([['plan', 'Test pipeline', [['stage', 'Pipeline stage', [['pipeline', { 'concurrency': 5, 'depth': 10 }, [['pipe', { 'pre': [['echo', 'pre ${P_X} A'], ['echo', 'pre 1 ${P_X} A']], 'post': [['echo', 'post ${P_X} A']] }, [['echo', 'tasks ${P_X} A']]], ['pipe', { 'pre': [['echo', 'pre ${P_X} B']], 'post': [['echo', 'post ${P_X} B']] }, [['echo', 'tasks ${P_X} B']]], ['pipe', { 'pre': [['echo', 'pre ${P_X} C']], 'post': [['echo', 'post ${P_X} C']] }, [['echo', 'tasks ${P_X} C']]], ['pipe', { 'pre': [['echo', 'pre ${P_X} D']], 'post': [['echo', 'post ${P_X} D'], ['echo', 'post 1 ${P_X} D']] }, [['echo', 'tasks ${P_X} D']]]]]]]]]]), {});
    // console.error('OUT', JSON.stringify(cops))
    // renderOpList(cops)
    expect(JSON.stringify(cops))
        .toBe(JSON.stringify([['plan', 'Test pipeline', [['stage', 'Pipeline stage', [['spread', 'pre 0', [['echo', 'pre 00000 A'], ['echo', 'pre 00004 A']]], ['spread', 'pre 0', [['echo', 'pre 1 00000 A'], ['echo', 'pre 1 00004 A']]], ['spread', 'tasks 0', [['echo', 'tasks 00000 A'], ['echo', 'tasks 00004 A']]], ['spread', 'post 0', [['echo', 'post 00000 A'], ['echo', 'post 00004 A']]], ['spread', 'pre 1', [['echo', 'pre 00000 B'], ['echo', 'pre 00001 A'], ['echo', 'pre 00004 B'], ['echo', 'pre 00008 A']]], ['spread', 'pre 1', [['echo', 'pre 1 00001 A'], ['echo', 'pre 1 00008 A']]], ['spread', 'tasks 1', [['echo', 'tasks 00000 B'], ['echo', 'tasks 00001 A'], ['echo', 'tasks 00004 B'], ['echo', 'tasks 00008 A']]], ['spread', 'post 1', [['echo', 'post 00000 B'], ['echo', 'post 00001 A'], ['echo', 'post 00004 B'], ['echo', 'post 00008 A']]], ['spread', 'pre 2', [['echo', 'pre 00000 C'], ['echo', 'pre 00001 B'], ['echo', 'pre 00002 A'], ['echo', 'pre 00004 C'], ['echo', 'pre 00005 A'], ['echo', 'pre 00008 B'], ['echo', 'pre 00009 A']]], ['spread', 'pre 2', [['echo', 'pre 1 00002 A'], ['echo', 'pre 1 00005 A'], ['echo', 'pre 1 00009 A']]], ['spread', 'tasks 2', [['echo', 'tasks 00000 C'], ['echo', 'tasks 00001 B'], ['echo', 'tasks 00002 A'], ['echo', 'tasks 00004 C'], ['echo', 'tasks 00005 A'], ['echo', 'tasks 00008 B'], ['echo', 'tasks 00009 A']]], ['spread', 'post 2', [['echo', 'post 00000 C'], ['echo', 'post 00001 B'], ['echo', 'post 00002 A'], ['echo', 'post 00004 C'], ['echo', 'post 00005 A'], ['echo', 'post 00008 B'], ['echo', 'post 00009 A']]], ['spread', 'pre 3', [['echo', 'pre 00000 D'], ['echo', 'pre 00001 C'], ['echo', 'pre 00002 B'], ['echo', 'pre 00003 A'], ['echo', 'pre 00004 D'], ['echo', 'pre 00005 B'], ['echo', 'pre 00006 A'], ['echo', 'pre 00008 C'], ['echo', 'pre 00009 B']]], ['spread', 'pre 3', [['echo', 'pre 1 00003 A'], ['echo', 'pre 1 00006 A']]], ['spread', 'tasks 3', [['echo', 'tasks 00000 D'], ['echo', 'tasks 00001 C'], ['echo', 'tasks 00002 B'], ['echo', 'tasks 00003 A'], ['echo', 'tasks 00004 D'], ['echo', 'tasks 00005 B'], ['echo', 'tasks 00006 A'], ['echo', 'tasks 00008 C'], ['echo', 'tasks 00009 B']]], ['spread', 'post 3', [['echo', 'post 00000 D'], ['echo', 'post 00001 C'], ['echo', 'post 00002 B'], ['echo', 'post 00003 A'], ['echo', 'post 00004 D'], ['echo', 'post 00005 B'], ['echo', 'post 00006 A'], ['echo', 'post 00008 C'], ['echo', 'post 00009 B']]], ['spread', 'post 3', [['echo', 'post 1 00000 D'], ['echo', 'post 1 00004 D']]], ['spread', 'pre 4', [['echo', 'pre 00001 D'], ['echo', 'pre 00002 C'], ['echo', 'pre 00003 B'], ['echo', 'pre 00005 C'], ['echo', 'pre 00006 B'], ['echo', 'pre 00007 A'], ['echo', 'pre 00008 D'], ['echo', 'pre 00009 C']]], ['spread', 'pre 4', [['echo', 'pre 1 00007 A']]], ['spread', 'tasks 4', [['echo', 'tasks 00001 D'], ['echo', 'tasks 00002 C'], ['echo', 'tasks 00003 B'], ['echo', 'tasks 00005 C'], ['echo', 'tasks 00006 B'], ['echo', 'tasks 00007 A'], ['echo', 'tasks 00008 D'], ['echo', 'tasks 00009 C']]], ['spread', 'post 4', [['echo', 'post 00001 D'], ['echo', 'post 00002 C'], ['echo', 'post 00003 B'], ['echo', 'post 00005 C'], ['echo', 'post 00006 B'], ['echo', 'post 00007 A'], ['echo', 'post 00008 D'], ['echo', 'post 00009 C']]], ['spread', 'post 4', [['echo', 'post 1 00001 D'], ['echo', 'post 1 00008 D']]], ['spread', 'pre 5', [['echo', 'pre 00002 D'], ['echo', 'pre 00003 C'], ['echo', 'pre 00005 D'], ['echo', 'pre 00006 C'], ['echo', 'pre 00007 B'], ['echo', 'pre 00009 D']]], ['spread', 'tasks 5', [['echo', 'tasks 00002 D'], ['echo', 'tasks 00003 C'], ['echo', 'tasks 00005 D'], ['echo', 'tasks 00006 C'], ['echo', 'tasks 00007 B'], ['echo', 'tasks 00009 D']]], ['spread', 'post 5', [['echo', 'post 00002 D'], ['echo', 'post 00003 C'], ['echo', 'post 00005 D'], ['echo', 'post 00006 C'], ['echo', 'post 00007 B'], ['echo', 'post 00009 D']]], ['spread', 'post 5', [['echo', 'post 1 00002 D'], ['echo', 'post 1 00005 D'], ['echo', 'post 1 00009 D']]], ['spread', 'pre 6', [['echo', 'pre 00003 D'], ['echo', 'pre 00006 D'], ['echo', 'pre 00007 C']]], ['spread', 'tasks 6', [['echo', 'tasks 00003 D'], ['echo', 'tasks 00006 D'], ['echo', 'tasks 00007 C']]], ['spread', 'post 6', [['echo', 'post 00003 D'], ['echo', 'post 00006 D'], ['echo', 'post 00007 C']]], ['spread', 'post 6', [['echo', 'post 1 00003 D'], ['echo', 'post 1 00006 D']]], ['spread', 'pre 7', [['echo', 'pre 00007 D']]], ['spread', 'tasks 7', [['echo', 'tasks 00007 D']]], ['spread', 'post 7', [['echo', 'post 00007 D']]], ['spread', 'post 7', [['echo', 'post 1 00007 D']]]]]]]]));
});
//# sourceMappingURL=pipeline-plan.spec.js.map